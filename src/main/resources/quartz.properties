# thread-pool
org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool

# thread count setting is ignored by the MongoDB store but Quartz requires it
org.quartz.threadPool.threadCount=10
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true
org.quartz.scheduler.makeSchedulerThreadDaemon=true
org.quartz.threadPool.makeThreadsDaemons=true

# Use the MongoDB store
#org.quartz.jobStore.class=com.novemberain.quartz.mongodb.MongoDBJobStore

# job-store
org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore

# MongoDB URI (optional if 'org.quartz.jobStore.addresses' is set)
#org.quartz.jobStore.mongoUri=mongodb://localhost:27017
#org.quartz.jobStore.mongoUri=mongodb+srv://root:root@zerorisk-score-95yck.mongodb.net/zerorisk?retryWrites=true&w=majority

# comma separated list of mongodb hosts/replica set seeds (optional if 'org.quartz.jobStore.mongoUri' is set)
#org.quartz.jobStore.addresses=host1,host2

# database name
#org.quartz.jobStore.dbName=job-stats

# Will be used to create collections like mycol_jobs, mycol_triggers, mycol_calendars, mycol_locks
#org.quartz.jobStore.collectionPrefix=quartz

# others
org.quartz.jobStore.misfireThreshold=60000

org.quartz.plugin.shutdownhook.class=org.quartz.plugins.management.ShutdownHookPlugin
org.quartz.plugin.shutdownhook.cleanShutdown=true

# CLUSTERING
#org.quartz.jobStore.isClustered=true

# Must be unique for each node or AUTO to use autogenerated:
#org.quartz.scheduler.instanceId=node1
# change node name for next instance


# The same cluster name on each node:
#org.quartz.scheduler.instanceName=clusterName
